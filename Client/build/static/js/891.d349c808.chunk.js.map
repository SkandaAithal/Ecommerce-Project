{"version":3,"file":"static/js/891.d349c808.chunk.js","mappings":";oRA6MA,IAAMA,EAAUC,EAAAA,GAAAA,IAAH,szDAuDa,qBAAGC,MAAkBC,OAAOC,KAA5B,IACA,qBAAGF,MAAkBC,OAAOE,GAA5B,IACX,qBAAGH,MAAkBC,OAAOE,GAA5B,IAyCf,UAnSA,WACE,IAAQC,GAAiBC,EAAAA,EAAAA,KAAjBD,aACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4CJ,EAAAA,EAAAA,WAAS,GAArD,eAAOK,EAAP,KAAuBC,EAAvB,KAeQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAe,2DAAuDJ,GACtEK,EAAkB,2DAAuDL,GAE/E,GAAoCM,EAAAA,EAAAA,YAAWC,EAAAA,EAlB1B,CACnBC,KAAM,GACNC,QAAS,GACTC,MAAO,EACPC,YAAa,GACbC,SAAU,GACVC,UAAU,EACVC,UAAU,EACVC,MAAO,EACPC,QAAS,EACTC,MAAO,EACP7B,OAAQ,KAOV,eAAO8B,EAAP,KAAcC,EAAd,KACMC,EAAeC,aAAaC,QAAQ,cAI1CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAC5B,GAAKL,EAUE,CACL,IAAMM,GAAQC,EAAAA,EAAAA,GAAQP,EAnBR,oCAoBdvB,EAAW6B,GACX,IAAME,EAAgB,yCAAG,oHAEEC,IAAAA,IAAUzB,EAAiB,CAChD0B,OAAQN,EAAgBM,OACxBC,QAAS,CACPC,cAAeN,KALE,gBAEbO,EAFa,EAEbA,KAORd,EAAmB,CACjBe,KAAM,mBACNC,QAASF,EAAKG,cAAc,KAXT,gDAcrB7C,EAAa,CACX2C,KAAM,oBACNC,QAAS,CACPE,QAAS,KAAIC,SAASL,KAAKI,QAC3BE,MAAO,SAlBU,yDAAH,qDAwBtBX,GACD,MArCCrC,EAAa,CACX2C,KAAM,oBACNC,QAAS,CACPE,QAAS,+CACTE,MAAO,SAGXhD,EAAa,CAAE2C,KAAM,eACrBhC,EAAS,KA+BX,OAAO,WACLsB,EAAgBgB,OACjB,CACF,GAAE,IAGH,IAAMC,GAAkBC,EAAAA,EAAAA,cACtB,SAACH,GACKrB,EAAM9B,OAAOuD,SAASJ,GACxBhD,EAAa,CACX2C,KAAM,oBACNC,QAAS,CACPE,QAAS,uCACTE,MAAO,SAIXpB,EAAmB,CAAEe,KAAM,YAAaC,QAASI,GAEpD,GACD,CAACrB,EAAM9B,SAGHwD,GAAcF,EAAAA,EAAAA,cAClB,SAACG,GACC1B,EAAmB,CAAEe,KAAM,eAAgBC,QAASU,GACrD,GACD,CAAC3B,EAAM9B,SAGH0D,EAAa,yCAAG,WAAOC,GAAP,4FAElBpD,GAAa,GACboD,EAAEC,wBACK9B,EAAM+B,QAEXC,OAAOC,OAAOjC,GAAOkC,OACnB,SAACnB,GAAD,MACW,KAATA,KAAgBoB,MAAMC,QAAQrB,IAAQA,EAAKsB,OAAS,EADtD,IAPc,wBAWVC,EAAa,CAAC,EACpBN,OAAOO,KAAKvC,GAAOwC,SAAQ,SAACC,GAC1B,IAAMC,EAAQ1C,EAAMyC,GACpBH,EAAWG,GACQ,kBAAVC,EAAqBA,EAAMC,cAAcC,OAASF,CAC5D,IAhBe,SAkBO/B,IAAAA,IAAUxB,EAAoBmD,EAAY,CAC/DzB,QAAS,CACPC,cAAepC,KApBH,gBAkBRqC,EAlBQ,EAkBRA,KAMR1C,EAAa,CACX2C,KAAM,oBACNC,QAAS,CACPE,QAASJ,EAAKI,QACdE,MAAO,WAGXxC,GAAkB,GA/BF,wBAiChBR,EAAa,CACX2C,KAAM,oBACNC,QAAS,CACPE,QAAS,wDACTE,MAAO,SArCK,0DA0ClBhD,EAAa,CACX2C,KAAM,oBACNC,QAAS,CACPE,QAAS,KAAIC,SAASL,KAAKI,QAC3BE,MAAO,SA9CO,yBAkDlBwB,OAAOC,SAAS,EAAG,GACnBrE,GAAa,GAnDK,6EAAH,sDAsDnB,OACE,SAACV,EAAD,UACGa,GACC,SAAC,IAAD,CAAemE,YAAa/C,EAAMV,KAAKqD,cAAcC,UAErD,iBAAKI,UAAU,0BAAf,WACE,eAAIC,MAAO,CAAEC,aAAc,QAA3B,8BAEA,kBAAMC,SAAUvB,EAAhB,WACE,SAAC,IAAD,CACE3B,mBAAoBA,EACpBD,MAAOA,EACPoD,UAAU,KAEZ,SAAC,IAAD,CACEnD,mBAAoBA,EACpBF,MAAOC,EAAMD,SAEf,SAAC,IAAD,CACE7B,OAAQ8B,EAAM9B,OACdqD,gBAAiBA,EACjBG,YAAaA,KAGf,yBACGlD,GACC,kBAAOwC,KAAK,SAAS0B,MAAO,YAAaW,UAAQ,KAEjD,kBAAOrC,KAAK,SAAS0B,MAAO,4BAQ3C","sources":["Components/UpdateProduct.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useReducer, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport reducerFunction from \"../Reducer/addproductReducer\";\r\nimport { useUserContext } from \"../context/userscontext\";\r\nimport ImageUploader from \"./ImageUploader\";\r\nimport Colors from \"./Colors\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport AddProductInputRange from \"./AddProductInputRange\";\r\nimport axios from \"axios\";\r\nimport { decrypt } from \"../helpers/encryptdecrypt\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction UpdateProduct() {\r\n  const { dispatchUser } = useUserContext();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [istoken, setIsToken] = useState(\"\");\r\n  const [productUpdated, setProductUpdated] = useState(false);\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    company: \"\",\r\n    price: 0,\r\n    description: \"\",\r\n    category: \"\",\r\n    shipping: false,\r\n    featured: false,\r\n    stock: 0,\r\n    reviews: 0,\r\n    stars: 5,\r\n    colors: [],\r\n  };\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const GET_PRODUCT_URL = `http://localhost:4000/products/singleproduct?pid=${id}`;\r\n  const UPDATE_PRODUCT_URL = `http://localhost:4000/products/updateproduct?pid=${id}`;\r\n  const secretKey = \"sX8nD4zH1cT6kA2yP7uV3wR9qG5pL0J9\";\r\n  const [state, dispatchAddProduct] = useReducer(reducerFunction, initialState);\r\n  const encryptToken = localStorage.getItem(\"userToken\");\r\n\r\n  //! to check for token and get su=ingle product\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    if (!encryptToken) {\r\n      dispatchUser({\r\n        type: \"SHOW_NOTIFICATION\",\r\n        payload: {\r\n          message: \"You must be logged in to Update your product\",\r\n          color: \"red\",\r\n        },\r\n      });\r\n      dispatchUser({ type: \"OPEN_LOGIN\" });\r\n      navigate(\"/\");\r\n    } else {\r\n      const token = decrypt(encryptToken, secretKey);\r\n      setIsToken(token);\r\n      const getSingleProduct = async () => {\r\n        try {\r\n          const { data } = await axios.get(GET_PRODUCT_URL, {\r\n            signal: abortController.signal,\r\n            headers: {\r\n              authorization: token,\r\n            },\r\n          });\r\n\r\n          dispatchAddProduct({\r\n            type: \"DATA_FROM_SERVER\",\r\n            payload: data.singleproduct[0],\r\n          });\r\n        } catch (err) {\r\n          dispatchUser({\r\n            type: \"SHOW_NOTIFICATION\",\r\n            payload: {\r\n              message: err.response.data.message,\r\n              color: \"red\",\r\n            },\r\n          });\r\n        }\r\n      };\r\n\r\n      getSingleProduct();\r\n    }\r\n\r\n    return () => {\r\n      abortController.abort();\r\n    };\r\n  }, []);\r\n\r\n  // ! add color to product\r\n  const addcolorToArray = useCallback(\r\n    (color) => {\r\n      if (state.colors.includes(color)) {\r\n        dispatchUser({\r\n          type: \"SHOW_NOTIFICATION\",\r\n          payload: {\r\n            message: \"You have already selected that color\",\r\n            color: \"red\",\r\n          },\r\n        });\r\n      } else {\r\n        dispatchAddProduct({ type: \"ADD_COLOR\", payload: color });\r\n      }\r\n    },\r\n    [state.colors]\r\n  );\r\n\r\n  const removeColor = useCallback(\r\n    (index) => {\r\n      dispatchAddProduct({ type: \"REMOVE_COLOR\", payload: index });\r\n    },\r\n    [state.colors]\r\n  );\r\n\r\n  const productSubmit = async (e) => {\r\n    try {\r\n      setIsLoading(true);\r\n      e.preventDefault();\r\n      delete state.images;\r\n      if (\r\n        Object.values(state).every(\r\n          (data) =>\r\n            data !== \"\" && (Array.isArray(data) ? data.length > 0 : true)\r\n        )\r\n      ) {\r\n        const submitData = {};\r\n        Object.keys(state).forEach((key) => {\r\n          const value = state[key];\r\n          submitData[key] =\r\n            typeof value === \"string\" ? value.toLowerCase().trim() : value;\r\n        });\r\n\r\n        const { data } = await axios.put(UPDATE_PRODUCT_URL, submitData, {\r\n          headers: {\r\n            authorization: istoken,\r\n          },\r\n        });\r\n\r\n        dispatchUser({\r\n          type: \"SHOW_NOTIFICATION\",\r\n          payload: {\r\n            message: data.message,\r\n            color: \"green\",\r\n          },\r\n        });\r\n        setProductUpdated(true);\r\n      } else {\r\n        dispatchUser({\r\n          type: \"SHOW_NOTIFICATION\",\r\n          payload: {\r\n            message: \"Please fill in all product details before submitting.\",\r\n            color: \"red\",\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatchUser({\r\n        type: \"SHOW_NOTIFICATION\",\r\n        payload: {\r\n          message: err.response.data.message,\r\n          color: \"red\",\r\n        },\r\n      });\r\n    } finally {\r\n      window.scrollTo(0, 0);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      {productUpdated ? (\r\n        <ImageUploader productName={state.name.toLowerCase().trim()} />\r\n      ) : (\r\n        <div className=\"updateproduct-container\">\r\n          <h2 style={{ marginBottom: \"1rem\" }}>Update Product!</h2>\r\n\r\n          <form onSubmit={productSubmit}>\r\n            <ProductForm\r\n              dispatchAddProduct={dispatchAddProduct}\r\n              state={state}\r\n              updation={true}\r\n            />\r\n            <AddProductInputRange\r\n              dispatchAddProduct={dispatchAddProduct}\r\n              stars={state.stars}\r\n            />\r\n            <Colors\r\n              colors={state.colors}\r\n              addcolorToArray={addcolorToArray}\r\n              removeColor={removeColor}\r\n            />\r\n\r\n            <div>\r\n              {isLoading ? (\r\n                <input type=\"submit\" value={\"Loading..\"} disabled />\r\n              ) : (\r\n                <input type=\"submit\" value={\"Update product\"} />\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  .updateproduct-container {\r\n    width: 60vw;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    display: grid;\r\n    gap: 2rem;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    form {\r\n      display: grid;\r\n      gap: 2rem;\r\n    }\r\n    .color-container {\r\n      display: flex;\r\n      justify-content: center;\r\n      text-align: center;\r\n\r\n      flex-direction: column;\r\n    }\r\n    .colors {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 1rem;\r\n      margin: auto;\r\n\r\n      .color-box {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: 10px;\r\n      }\r\n\r\n      .color {\r\n        width: 2.5rem;\r\n        height: 2.5rem;\r\n        border-radius: 50%;\r\n        box-shadow: 0px 0px 5px 2px #dad9db;\r\n      }\r\n\r\n      .cross {\r\n        color: #ff0000;\r\n        cursor: pointer;\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n\r\n  input[type=\"submit\"] {\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n\r\n    min-width: fit-content;\r\n    margin: 3rem auto;\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.colors.white};\r\n      border: 1px solid ${({ theme }) => theme.colors.btn};\r\n      color: ${({ theme }) => theme.colors.btn};\r\n      transform: scale(0.9);\r\n    }\r\n  }\r\n  label,\r\n  h3 {\r\n    font-size: 1.75rem;\r\n    font-weight: bold;\r\n    font-family: \"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\",\r\n      \"Lucida Sans\", Arial, sans-serif;\r\n  }\r\n\r\n  @media (max-width: 998px) {\r\n    .updateproduct-container {\r\n      width: 100dvw;\r\n    }\r\n    input,\r\n    textarea {\r\n      min-width: 60dvw;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .updateproduct-container {\r\n      width: 100dvw;\r\n    }\r\n    input,\r\n    textarea {\r\n      min-width: 70dvw;\r\n    }\r\n  }\r\n  @media (max-width: 400px) {\r\n    .updateproduct-container {\r\n      width: 100dvw;\r\n    }\r\n    input,\r\n    textarea {\r\n      min-width: 90dvw;\r\n    }\r\n  }\r\n`;\r\nexport default UpdateProduct;\r\n"],"names":["Wrapper","styled","theme","colors","white","btn","dispatchUser","useUserContext","useState","isLoading","setIsLoading","istoken","setIsToken","productUpdated","setProductUpdated","id","useParams","navigate","useNavigate","GET_PRODUCT_URL","UPDATE_PRODUCT_URL","useReducer","reducerFunction","name","company","price","description","category","shipping","featured","stock","reviews","stars","state","dispatchAddProduct","encryptToken","localStorage","getItem","useEffect","abortController","AbortController","token","decrypt","getSingleProduct","axios","signal","headers","authorization","data","type","payload","singleproduct","message","response","color","abort","addcolorToArray","useCallback","includes","removeColor","index","productSubmit","e","preventDefault","images","Object","values","every","Array","isArray","length","submitData","keys","forEach","key","value","toLowerCase","trim","window","scrollTo","productName","className","style","marginBottom","onSubmit","updation","disabled"],"sourceRoot":""}