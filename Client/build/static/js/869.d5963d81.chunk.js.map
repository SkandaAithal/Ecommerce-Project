{"version":3,"file":"static/js/869.d5963d81.chunk.js","mappings":"wNAsHA,IAAMA,EAAUC,EAAAA,GAAAA,QAAH,44BAiDE,qBAAGC,MAAkBC,OAAOC,GAA5B,IAIf,UAlKA,YAA6C,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,IAAKC,EAAM,EAANA,GACpC,EAA6BF,EAAvBF,OAAAA,OAAN,MAAe,GAAf,EAAmBK,EAAUH,EAAVG,MACnB,GAA8BC,EAAAA,EAAAA,UAASN,EAAO,IAA9C,eAAKO,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,GAAnC,eAAKG,EAAL,KAAaC,EAAb,KACMC,GAAcC,EAAAA,EAAAA,KAAdD,UACFE,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAEAE,EAAW,WACFP,EAAbD,EAAS,EAAcA,EAAS,EAAe,EAChD,EACKS,EAAW,WACER,EAAjBD,EAASJ,EAAkBI,EAAS,EAAeJ,EACpD,EAEKc,EAAWC,aAAaC,QAAQ,QACtC,OACE,UAACxB,EAAD,YACE,gBAAKyB,UAAU,SAAf,UACE,oCAEGtB,EAAOuB,KAAI,SAACC,EAAOC,GAClB,OACE,mBAEEH,UAAWf,IAAaiB,EAAQ,mBAAqB,WACrDE,MAAO,CAAEC,gBAAiBH,GAC1BI,QAAS,WACPpB,EAAYgB,EACb,EANH,SAQGjB,IAAaiB,GAAQ,SAAC,MAAD,CAASF,UAAU,eAAkB,MAPtDG,EAUV,SAIS,aAAbN,GACC,iCACE,SAAC,IAAD,CAAYV,OAAQA,EAAQS,SAAUA,EAAUD,SAAUA,KAC1D,SAAC,IAAD,CACEW,QAAS,WACKR,aAAaC,QAAQ,cAE/BV,EAAUF,EAAQF,EAAUL,GAC5B2B,OAAOC,SAAS,EAAG,GACnBjB,EAAS,WAETE,EAAa,CACXgB,KAAM,oBACNC,QAAS,CACPC,QAAS,uCACTT,MAAO,SAGXT,EAAa,CAAEgB,KAAM,eAExB,EAjBH,4BAsBa,WAAbZ,EACM,oBAARhB,GACE,SAAC,IAAD,CACEyB,QAAS,WACPC,OAAOC,SAAS,EAAG,GACnBjB,EAAS,kBAAD,OAAmBT,GAC5B,EAJH,6BASA,eAAIsB,MAAO,CAAEF,MAAO,OAApB,oEAKF,iCACE,SAAC,IAAD,CAAYf,OAAQA,EAAQS,SAAUA,EAAUD,SAAUA,KAC1D,SAAC,IAAD,CACEW,QAAS,WACP,IAAIM,EAAQd,aAAaC,QAAQ,aACjCQ,OAAOC,SAAS,EAAG,GACfI,GACFvB,EAAUF,EAAQF,EAAUL,GAE5BW,EAAS,WAETE,EAAa,CACXgB,KAAM,oBACNC,QAAS,CACPC,QAAS,uCACTT,MAAO,SAGXT,EAAa,CAAEgB,KAAM,eAExB,EAlBH,8BA0BT,C,qFCjHc,SAASI,EAAT,GAAqD,IAA/B1B,EAA8B,EAA9BA,OAAQQ,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACrD,OACE,gBAAKI,UAAU,cAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,mBAAQM,QAASX,EAAjB,UACE,SAAC,MAAD,OAEF,iBAAMK,UAAU,eAAhB,SAAgCb,KAChC,mBAAQmB,QAASV,EAAjB,UACE,SAAC,MAAD,UAKT,C","sources":["Components/AddToProduct.jsx","Components/CartAmount.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport CartAmount from \"./CartAmount\";\r\nimport { Button } from \"../styles/Button\";\r\nimport { useCartContext } from \"../context/cartcontext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUserContext } from \"../context/userscontext\";\r\nfunction AddToProduct({ product, nav, id }) {\r\n  let { colors = [], stock } = product;\r\n  let [curColor, setCurColor] = useState(colors[0]);\r\n  let [amount, setAmount] = useState(1);\r\n  let { addToCart } = useCartContext();\r\n  let navigate = useNavigate();\r\n  let { dispatchUser } = useUserContext();\r\n\r\n  const decrease = () => {\r\n    amount > 1 ? setAmount(amount - 1) : setAmount(1);\r\n  };\r\n  const increase = () => {\r\n    amount < stock ? setAmount(amount + 1) : setAmount(stock);\r\n  };\r\n\r\n  const userRole = localStorage.getItem(\"role\");\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"colors\">\r\n        <p>\r\n          Colors :\r\n          {colors.map((color, index) => {\r\n            return (\r\n              <button\r\n                key={index}\r\n                className={curColor === color ? \" btnStyle active\" : \"btnStyle\"}\r\n                style={{ backgroundColor: color }}\r\n                onClick={() => {\r\n                  setCurColor(color);\r\n                }}\r\n              >\r\n                {curColor === color ? <FaCheck className=\"checkStyle\" /> : null}\r\n              </button>\r\n            );\r\n          })}\r\n        </p>\r\n      </div>\r\n\r\n      {userRole === \"customer\" ? (\r\n        <>\r\n          <CartAmount amount={amount} increase={increase} decrease={decrease} />\r\n          <Button\r\n            onClick={() => {\r\n              let token = localStorage.getItem(\"userToken\");\r\n              if (token) {\r\n                addToCart(amount, curColor, product);\r\n                window.scrollTo(0, 0);\r\n                navigate(\"/cart\");\r\n              } else {\r\n                dispatchUser({\r\n                  type: \"SHOW_NOTIFICATION\",\r\n                  payload: {\r\n                    message: \"You must Login to Continue Shopping!\",\r\n                    color: \"red\",\r\n                  },\r\n                });\r\n                dispatchUser({ type: \"OPEN_LOGIN\" });\r\n              }\r\n            }}\r\n          >\r\n            Add To Cart\r\n          </Button>\r\n        </>\r\n      ) : userRole === \"seller\" ? (\r\n        nav === \"/sellerproducts\" ? (\r\n          <Button\r\n            onClick={() => {\r\n              window.scrollTo(0, 0);\r\n              navigate(`/updateproduct/${id}`);\r\n            }}\r\n          >\r\n            Update Product\r\n          </Button>\r\n        ) : (\r\n          <h3 style={{ color: \"red\" }}>\r\n            You should be a customer to Add items to your Cart!!.\r\n          </h3>\r\n        )\r\n      ) : (\r\n        <>\r\n          <CartAmount amount={amount} increase={increase} decrease={decrease} />\r\n          <Button\r\n            onClick={() => {\r\n              let token = localStorage.getItem(\"userToken\");\r\n              window.scrollTo(0, 0);\r\n              if (token) {\r\n                addToCart(amount, curColor, product);\r\n\r\n                navigate(\"/cart\");\r\n              } else {\r\n                dispatchUser({\r\n                  type: \"SHOW_NOTIFICATION\",\r\n                  payload: {\r\n                    message: \"You must Login to Continue Shopping!\",\r\n                    color: \"red\",\r\n                  },\r\n                });\r\n                dispatchUser({ type: \"OPEN_LOGIN\" });\r\n              }\r\n            }}\r\n          >\r\n            Add To Cart\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  gap: 2rem;\r\n  .colors p {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n  .btnStyle {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    background-color: #000;\r\n    border-radius: 50%;\r\n    margin-left: 1rem;\r\n    border: none;\r\n    outline: none;\r\n    opacity: 0.5;\r\n    box-shadow: 0px 0px 5px 2px #dad9db;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .active {\r\n    opacity: 1;\r\n  }\r\n\r\n  .checkStyle {\r\n    font-size: 1rem;\r\n    color: #fff;\r\n  }\r\n\r\n  /* we can use it as a global one too  */\r\n  .amount-toggle {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-size: 1.4rem;\r\n\r\n    button {\r\n      border: none;\r\n      background-color: #fff;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .amount-style {\r\n      font-size: 2.4rem;\r\n      color: ${({ theme }) => theme.colors.btn};\r\n    }\r\n  }\r\n`;\r\nexport default AddToProduct;\r\n","import React from \"react\";\r\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\r\n\r\nexport default function CartAmount({ amount, decrease, increase }) {\r\n  return (\r\n    <div className=\"cart-button\">\r\n      <div className=\"amount-toggle\">\r\n        <button onClick={decrease}>\r\n          <FaMinus />\r\n        </button>\r\n        <span className=\"amount-style\">{amount}</span>\r\n        <button onClick={increase}>\r\n          <FaPlus />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Wrapper","styled","theme","colors","btn","product","nav","id","stock","useState","curColor","setCurColor","amount","setAmount","addToCart","useCartContext","navigate","useNavigate","dispatchUser","useUserContext","decrease","increase","userRole","localStorage","getItem","className","map","color","index","style","backgroundColor","onClick","window","scrollTo","type","payload","message","token","CartAmount"],"sourceRoot":""}