{"version":3,"file":"static/js/481.9771244a.chunk.js","mappings":"oRAUe,SAASA,EAAT,GAAiE,IAAD,IAA5CC,SAAAA,OAA4C,MAAjC,GAAiC,EAA7BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WAC/D,GAA8BC,EAAAA,EAAAA,KAAtBC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACfC,GAAWC,EAAAA,EAAAA,MACPC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAKR,OAJAF,EAAWA,EAASI,UACpBC,EAAAA,EAAAA,YAAU,WACRN,EAAOC,EACR,GAAE,CAACA,KAEF,SAACM,EAAD,CAASC,UAAU,UAAnB,SACGT,GACC,SAAC,IAAD,KAEA,SAAC,IAAD,CACEU,WAAYd,EAASe,OACrBC,KAAMf,EACNgB,QAASjB,EAASe,OAASb,EAC3BgB,QAAQ,SAAC,IAAD,IACRC,YACE,cACEC,MAAO,CACLC,UAAW,SACXC,SAAU,SACVC,OAAQ,OACRC,MAAO,WALX,UAQE,uEAGJC,gBAAiB,GAjBnB,UAmBE,gBAAKZ,UAAU,iBAAf,SACGb,EAAS0B,KACR,YAAyD,IAAtDC,EAAqD,EAArDA,IAAKC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvC,OACE,iBAAKnB,UAAU,4BAAf,WACE,mBAAQA,UAAU,OAAlB,UACE,SAAC,IAAD,CAAWoB,IAAKJ,EAAOK,SAAUF,OAGnC,iBAAKnB,UAAU,YAAf,WACE,wBAAKe,KACL,wBACE,SAAC,IAAD,CAAaE,MAAOA,OAEtB,yBAAIC,EAAYI,MAAM,EAAG,IAAzB,UACA,SAAC,KAAD,CACEC,GAAE,yBAAoBT,GACtBd,UAAU,WACVwB,QAAS,WACPC,OAAOC,SAAS,EAAG,EACpB,EALH,UAOE,SAAC,IAAD,CAAQ1B,UAAU,MAAlB,yBAGY,oBAAbP,IACC,SAAC,IAAD,CACE+B,QAAS,WACP7B,EAAa,CACXgC,KAAM,eACNC,QAAS,CAAEC,GAAIf,EAAKC,KAAMA,IAE7B,EACDR,MAAO,CACLuB,gBAAiB,MACjBC,aAAc,QATlB,yBAtB0CjB,EAwCnD,SAOd,CACD,IAAMf,EAAUiC,EAAAA,GAAAA,QAAH,miDAgFU,qBAAGC,MAAkBC,MAAMC,MAA3B,G","sources":["Components/ListView.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FormatPrice from \"../helpers/FormatPrice\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Button } from \"../styles/Button\";\r\nimport { useProductContext } from \"../context/productcontext\";\r\nimport Loader from \"./Loader\";\r\nimport LazyImage from \"../helpers/LazyImage\";\r\nimport { useUserContext } from \"../context/userscontext\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nexport default function ListView({ products = [], loadMoreItems, totalItems }) {\r\n  const { isLoading, setNav } = useProductContext();\r\n  let location = useLocation();\r\n  const { dispatchUser } = useUserContext();\r\n  location = location.pathname;\r\n  useEffect(() => {\r\n    setNav(location);\r\n  }, [location]);\r\n  return (\r\n    <Wrapper className=\"section\">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <InfiniteScroll\r\n          dataLength={products.length}\r\n          next={loadMoreItems}\r\n          hasMore={products.length < totalItems}\r\n          loader={<Loader />}\r\n          endMessage={\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"1.5rem\",\r\n                margin: \"2rem\",\r\n                color: \"#3d3d3d\",\r\n              }}\r\n            >\r\n              <b>That's all for now! Thanks for exploring.</b>\r\n            </p>\r\n          }\r\n          scrollThreshold={0.5}\r\n        >\r\n          <div className=\"container grid\">\r\n            {products.map(\r\n              ({ _id, name, image, price, description, blurHash }) => {\r\n                return (\r\n                  <div className=\"card grid grid-two-column\" key={_id}>\r\n                    <figure className=\"card\">\r\n                      <LazyImage src={image} blurhash={blurHash} />\r\n                    </figure>\r\n\r\n                    <div className=\"card-data\">\r\n                      <h3>{name}</h3>\r\n                      <p>\r\n                        <FormatPrice price={price} />\r\n                      </p>\r\n                      <p>{description.slice(0, 75)}...</p>\r\n                      <Link\r\n                        to={`/singleproduct/${_id}`}\r\n                        className=\"btn-main\"\r\n                        onClick={() => {\r\n                          window.scrollTo(0, 0);\r\n                        }}\r\n                      >\r\n                        <Button className=\"btn\">Read more</Button>\r\n                      </Link>\r\n\r\n                      {location === \"/sellerproducts\" && (\r\n                        <Button\r\n                          onClick={() => {\r\n                            dispatchUser({\r\n                              type: \"OPEN_CONFIRM\",\r\n                              payload: { id: _id, name: name },\r\n                            });\r\n                          }}\r\n                          style={{\r\n                            backgroundColor: \"red\",\r\n                            marginBottom: \"2rem\",\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            )}\r\n          </div>\r\n        </InfiniteScroll>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nconst Wrapper = styled.section`\r\n  .grid {\r\n    gap: 3.2rem;\r\n  }\r\n  .container {\r\n    padding: 2rem;\r\n  }\r\n  figure {\r\n    width: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: all 0.5s linear;\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 0%;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      transition: all 0.2s linear;\r\n      cursor: pointer;\r\n    }\r\n    &:hover::after {\r\n      width: 100%;\r\n    }\r\n    &:hover img {\r\n      transform: scale(1.2);\r\n    }\r\n    img {\r\n      max-width: 100%;\r\n      height: 40rem;\r\n      transition: all 0.2s linear;\r\n    }\r\n  }\r\n\r\n  .card {\r\n    border: 0.1rem solid rgb(170 170 170 / 40%);\r\n\r\n    .card-data {\r\n      padding: 0 2rem;\r\n    }\r\n\r\n    h3 {\r\n      margin: 2rem 0;\r\n      font-weight: 300;\r\n      font-size: 2.4rem;\r\n      text-transform: capitalize;\r\n    }\r\n\r\n    .btn {\r\n      margin: 2rem 0;\r\n      background-color: rgb(0 0 0 / 0%);\r\n      border: 0.1rem solid rgb(98 84 243);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      color: rgb(98 84 243);\r\n\r\n      &:hover {\r\n        background-color: rgb(98 84 243);\r\n      }\r\n\r\n      &:hover a {\r\n        color: #fff;\r\n      }\r\n      a {\r\n        color: rgb(98 84 243);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n\r\n    .btn-main .btn:hover {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}) {\r\n    .container {\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n"],"names":["ListView","products","loadMoreItems","totalItems","useProductContext","isLoading","setNav","location","useLocation","dispatchUser","useUserContext","pathname","useEffect","Wrapper","className","dataLength","length","next","hasMore","loader","endMessage","style","textAlign","fontSize","margin","color","scrollThreshold","map","_id","name","image","price","description","blurHash","src","blurhash","slice","to","onClick","window","scrollTo","type","payload","id","backgroundColor","marginBottom","styled","theme","media","mobile"],"sourceRoot":""}