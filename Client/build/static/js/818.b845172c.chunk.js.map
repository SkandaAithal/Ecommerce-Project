{"version":3,"file":"static/js/818.b845172c.chunk.js","mappings":"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","sources":["Components/FeatureProduct.jsx","Components/Product.jsx","helpers/FormatPrice.jsx","helpers/LazyImage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useProductContext } from \"../context/productcontext\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"./Loader\";\r\nimport Product from \"./Product\";\r\n\r\nfunction FeatureProduct() {\r\n  const { isLoading, featureProducts } = useProductContext();\r\n\r\n  return (\r\n    <Wrapper className=\"section\">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"intro-data\">Check Now!</div>\r\n          <div className=\"common-heading\">Our Feature Services</div>\r\n          <div className=\"grid grid-three-column\">\r\n            {featureProducts.map((item) => {\r\n              return <Product key={item._id} {...item} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 9rem 0;\r\n  background-color: ${({ theme }) => theme.colors.bg};\r\n\r\n  .container {\r\n    max-width: 110rem;\r\n  }\r\n\r\n  figure {\r\n    width: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 18rem;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: all 0.5s linear;\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 0%;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      transition: all 0.2s linear;\r\n      cursor: pointer;\r\n    }\r\n    &:hover::after {\r\n      width: 100%;\r\n    }\r\n    &:hover img {\r\n      transform: scale(1.2);\r\n    }\r\n    img {\r\n      max-width: 100%;\r\n\r\n      height: 100%;\r\n\r\n      object-fit: cover;\r\n      transition: all 0.2s linear;\r\n    }\r\n\r\n    .caption {\r\n      position: absolute;\r\n      top: 15%;\r\n      right: 10%;\r\n      text-transform: uppercase;\r\n      background-color: ${({ theme }) => theme.colors.bg};\r\n      color: ${({ theme }) => theme.colors.text1};\r\n      padding: 0.8rem 2rem;\r\n      font-size: 1.2rem;\r\n      border-radius: 2rem;\r\n    }\r\n  }\r\n\r\n  .card {\r\n    background-color: #fff;\r\n    border-radius: 1rem;\r\n    padding-bottom: 1rem;\r\n\r\n    .card-data {\r\n      padding: 0 2rem;\r\n    }\r\n\r\n    .card-data-flex {\r\n      margin: 2rem 0;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n\r\n    h3 {\r\n      color: ${({ theme }) => theme.colors.text};\r\n      text-transform: capitalize;\r\n    }\r\n\r\n    .card-data--price {\r\n      color: ${({ theme }) => theme.colors.helper};\r\n    }\r\n\r\n    .btn {\r\n      margin: 2rem auto;\r\n      background-color: rgb(0 0 0 / 0%);\r\n      border: 0.1rem solid rgb(98 84 243);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      &:hover {\r\n        background-color: rgb(98 84 243);\r\n      }\r\n\r\n      &:hover a {\r\n        color: #fff;\r\n      }\r\n      a {\r\n        color: rgb(98 84 243);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FeatureProduct;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport FormatPrice from \"../helpers/FormatPrice\";\r\nimport { useProductContext } from \"../context/productcontext\";\r\nimport LazyImage from \"../helpers/LazyImage\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useUserContext } from \"../context/userscontext\";\r\n\r\nfunction Product({ _id, name, image, blurHash, price, category }) {\r\n  let location = useLocation();\r\n  location = location.pathname;\r\n\r\n  const { dispatchUser } = useUserContext();\r\n  let { setNav } = useProductContext();\r\n\r\n  useEffect(() => {\r\n    setNav(location);\r\n  }, [location]);\r\n\r\n  const closeIconStyle = {\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    right: \"10px\",\r\n    fontSize: \"2.5rem\",\r\n    color: \"#555\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div className=\"card\">\r\n        <>\r\n          {location === \"/sellerproducts\" && (\r\n            <div className=\"close-icon\" style={closeIconStyle}>\r\n              <FaTimes\r\n                onClick={() => {\r\n                  dispatchUser({\r\n                    type: \"OPEN_CONFIRM\",\r\n                    payload: { id: _id, name: name },\r\n                  });\r\n                }}\r\n                style={{\r\n                  fontSize: \"2.75rem\",\r\n                  color: \"#555\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <Link\r\n            to={`/singleproduct/${_id}`}\r\n            onClick={() => {\r\n              window.scrollTo(0, 0);\r\n            }}\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <figure>\r\n              <LazyImage src={image} blurhash={blurHash} />\r\n              <figcaption className=\"caption\">{category}</figcaption>\r\n            </figure>\r\n            <div className=\"card-data\">\r\n              <div className=\"card-data-flex\">\r\n                <h3>{name.length > 17 ? `${name.slice(0, 17)}...` : name}</h3>\r\n                <p className=\"card-data--price\">\r\n                  <FormatPrice price={price} />\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\n\r\nfunction FormatPrice({ price }) {\r\n  return (\r\n    <>\r\n      {Intl.NumberFormat(\"en-IN\", {\r\n        style: \"currency\",\r\n        currency: \"INR\",\r\n        maximumFractionDigits: 2,\r\n      }).format(price)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormatPrice;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Blurhash } from \"react-blurhash\";\r\n\r\nfunction LazyImage({ src, blurhash }) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const placeholderRef = useRef(null);\r\n  const [view, setView] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      rootMargin: \"0px 0px\",\r\n      threshold: 0,\r\n    };\r\n    const observer = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        setView(src);\r\n        observer.disconnect();\r\n      }\r\n    }, options);\r\n\r\n    if (placeholderRef && placeholderRef.current) {\r\n      observer.observe(placeholderRef.current);\r\n    }\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <div\r\n          ref={placeholderRef}\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Blurhash\r\n            hash={blurhash}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            resolutionX={32}\r\n            resolutionY={32}\r\n            punch={1}\r\n          />\r\n        </div>\r\n      )}\r\n      <img\r\n        src={`http://localhost:4000/uploads/${view}`}\r\n        alt=\"\"\r\n        style={{\r\n          display: isLoading ? \"none\" : \"block\",\r\n          width: \"100%\",\r\n        }}\r\n        onLoad={() => {\r\n          setIsLoading(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LazyImage;\r\n"],"names":["Wrapper","styled","theme","colors","bg","text1","text","helper","useProductContext","isLoading","featureProducts","className","map","item","_id","name","image","blurHash","price","category","location","useLocation","pathname","dispatchUser","useUserContext","setNav","useEffect","style","position","top","right","fontSize","color","cursor","onClick","type","payload","id","to","window","scrollTo","src","blurhash","length","slice","Intl","NumberFormat","currency","maximumFractionDigits","format","useState","setIsLoading","placeholderRef","useRef","view","setView","observer","IntersectionObserver","entries","isIntersecting","disconnect","rootMargin","threshold","current","observe","ref","width","height","hash","resolutionX","resolutionY","punch","alt","display","onLoad"],"sourceRoot":""}