{"version":3,"file":"static/js/61.df27c101.chunk.js","mappings":"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","sources":["Components/Product.jsx","Components/GridViewList .jsx","Components/ProductList.jsx","Components/SellerProducts.jsx","helpers/FormatPrice.jsx","helpers/LazyImage.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport FormatPrice from \"../helpers/FormatPrice\";\r\nimport { useProductContext } from \"../context/productcontext\";\r\nimport LazyImage from \"../helpers/LazyImage\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useUserContext } from \"../context/userscontext\";\r\n\r\nfunction Product({ _id, name, image, blurHash, price, category }) {\r\n  let location = useLocation();\r\n  location = location.pathname;\r\n\r\n  const { dispatchUser } = useUserContext();\r\n  let { setNav } = useProductContext();\r\n\r\n  useEffect(() => {\r\n    setNav(location);\r\n  }, [location]);\r\n\r\n  const closeIconStyle = {\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    right: \"10px\",\r\n    fontSize: \"2.5rem\",\r\n    color: \"#555\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div className=\"card\">\r\n        <>\r\n          {location === \"/sellerproducts\" && (\r\n            <div className=\"close-icon\" style={closeIconStyle}>\r\n              <FaTimes\r\n                onClick={() => {\r\n                  dispatchUser({\r\n                    type: \"OPEN_CONFIRM\",\r\n                    payload: { id: _id, name: name },\r\n                  });\r\n                }}\r\n                style={{\r\n                  fontSize: \"2.75rem\",\r\n                  color: \"#555\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <Link\r\n            to={`/singleproduct/${_id}`}\r\n            onClick={() => {\r\n              window.scrollTo(0, 0);\r\n            }}\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <figure>\r\n              <LazyImage src={image} blurhash={blurHash} />\r\n              <figcaption className=\"caption\">{category}</figcaption>\r\n            </figure>\r\n            <div className=\"card-data\">\r\n              <div className=\"card-data-flex\">\r\n                <h3>{name.length > 17 ? `${name.slice(0, 17)}...` : name}</h3>\r\n                <p className=\"card-data--price\">\r\n                  <FormatPrice price={price} />\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport Product from \"./Product\";\r\nimport styled from \"styled-components\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"./Loader\";\r\n\r\nexport default function GridViewList({\r\n  products = [],\r\n  loadMoreItems,\r\n  totalItems,\r\n}) {\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={products.length}\r\n      next={loadMoreItems}\r\n      hasMore={products.length < totalItems}\r\n      loader={<Loader />}\r\n      endMessage={\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"1.5rem\",\r\n            margin: \"2rem\",\r\n            color: \"#3d3d3d\",\r\n          }}\r\n        >\r\n          <b>That's all for now! Thanks for exploring.</b>\r\n        </p>\r\n      }\r\n      scrollThreshold={0.5}\r\n    >\r\n      <Wrapper className=\"grid grid-three-column \">\r\n        {products.map((item) => {\r\n          return <Product key={item._id} {...item} />;\r\n        })}\r\n      </Wrapper>\r\n    </InfiniteScroll>\r\n  );\r\n}\r\nconst Wrapper = styled.section`\r\n  /* padding: 5rem 0; */\r\n  .item1 {\r\n    grid-column: 1 / span 3;\r\n  }\r\n\r\n  figure {\r\n    width: auto;\r\n    display: flex;\r\n    height: 18rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: all 0.5s linear;\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 0%;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      transition: all 0.2s linear;\r\n      cursor: pointer;\r\n    }\r\n    &:hover::after {\r\n      width: 100%;\r\n    }\r\n    &:hover img {\r\n      transform: scale(1.2);\r\n    }\r\n    img {\r\n      max-width: 100%;\r\n\r\n      height: 100%;\r\n      object-fit: cover;\r\n      transition: all 0.2s linear;\r\n    }\r\n\r\n    .caption {\r\n      position: absolute;\r\n      top: 15%;\r\n      right: 10%;\r\n      text-transform: uppercase;\r\n      background-color: ${({ theme }) => theme.colors.white};\r\n      color: ${({ theme }) => theme.colors.text1};\r\n      padding: 0.8rem 2rem;\r\n      font-size: 1.2rem;\r\n      border-radius: 2rem;\r\n    }\r\n  }\r\n  .close-icon {\r\n    position: absolute;\r\n    z-index: 1;\r\n  }\r\n  .card {\r\n    background-color: #ded2f37d;\r\n    border-radius: 1rem;\r\n    padding-bottom: 1rem;\r\n\r\n    .card-data {\r\n      padding: 2rem 1rem;\r\n    }\r\n\r\n    .card-data-flex {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n\r\n    h3 {\r\n      color: #2d253a;\r\n      text-transform: capitalize;\r\n    }\r\n\r\n    .card-data--price {\r\n      color: #2d253a;\r\n    }\r\n\r\n    .btn {\r\n      margin: 2rem auto;\r\n      background-color: rgb(0 0 0 / 0%);\r\n      border: 0.1rem solid rgb(98 84 243);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      &:hover {\r\n        background-color: rgb(98 84 243);\r\n      }\r\n\r\n      &:hover a {\r\n        color: #fff;\r\n      }\r\n      a {\r\n        color: rgb(98 84 243);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}) {\r\n    figure {\r\n      height: 26rem;\r\n    }\r\n  }\r\n`;\r\n","import React, { Suspense, lazy } from \"react\";\r\n\r\nimport GridViewList from \"./GridViewList \";\r\nimport Loader from \"./Loader\";\r\n\r\nconst ListView = lazy(() => import(\"./ListView\"));\r\n\r\nexport default function ProductList({\r\n  gridView,\r\n  filterProducts,\r\n  totalItems,\r\n  loadMoreItems,\r\n}) {\r\n  if (gridView === true) {\r\n    return (\r\n      <GridViewList\r\n        products={filterProducts}\r\n        loadMoreItems={loadMoreItems}\r\n        totalItems={totalItems}\r\n      />\r\n    );\r\n  }\r\n  if (gridView === false) {\r\n    return (\r\n      <Suspense fallback={<Loader />}>\r\n        <ListView\r\n          products={filterProducts}\r\n          loadMoreItems={loadMoreItems}\r\n          totalItems={totalItems}\r\n        />\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ProductList from \"../Components/ProductList\";\r\nimport { BsFillGridFill } from \"react-icons/bs\";\r\nimport { FaList } from \"react-icons/fa\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport { useSellerContext } from \"../context/sellercontext\";\r\nimport { useProductContext } from \"../context/productcontext\";\r\n\r\nconst SellerProducts = () => {\r\n  const { products, isLoading, totalItems, loadMoreItems, dispatchSeller } =\r\n    useSellerContext();\r\n  const { setGridView, setListView, gridView } = useProductContext();\r\n  useEffect(() => {\r\n    dispatchSeller({ type: \"REFRESH\" });\r\n  }, []);\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"container\">\r\n        <div className=\"list\">\r\n          <div className=\"list-btn\">\r\n            <button\r\n              className={gridView ? \"sort-btn active\" : \"sort-btn\"}\r\n              onClick={setGridView}\r\n            >\r\n              <BsFillGridFill className=\"icon\" />\r\n            </button>\r\n            <button\r\n              className={!gridView ? \"sort-btn active\" : \"sort-btn\"}\r\n              onClick={setListView}\r\n            >\r\n              <FaList className=\"icon\" />\r\n            </button>\r\n          </div>\r\n          <p>{totalItems} total Products</p>\r\n        </div>\r\n        <div className=\"main-product\">\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            <ProductList\r\n              gridView={gridView}\r\n              filterProducts={products}\r\n              totalItems={totalItems}\r\n              loadMoreItems={loadMoreItems}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  .container {\r\n    padding: 2rem;\r\n    .list {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-block: 5rem;\r\n    }\r\n    .list-btn {\r\n      display: flex;\r\n      gap: 2rem;\r\n    }\r\n    .sort-btn {\r\n      padding: 0.8rem 1rem;\r\n      border: none;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .icon {\r\n      font-size: 1.6rem;\r\n    }\r\n    .active {\r\n      background-color: ${({ theme }) => theme.colors.black};\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}) {\r\n    .container {\r\n      padding: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SellerProducts;\r\n","import React from \"react\";\r\n\r\nfunction FormatPrice({ price }) {\r\n  return (\r\n    <>\r\n      {Intl.NumberFormat(\"en-IN\", {\r\n        style: \"currency\",\r\n        currency: \"INR\",\r\n        maximumFractionDigits: 2,\r\n      }).format(price)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormatPrice;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Blurhash } from \"react-blurhash\";\r\n\r\nfunction LazyImage({ src, blurhash }) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const placeholderRef = useRef(null);\r\n  const [view, setView] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      rootMargin: \"0px 0px\",\r\n      threshold: 0,\r\n    };\r\n    const observer = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        setView(src);\r\n        observer.disconnect();\r\n      }\r\n    }, options);\r\n\r\n    if (placeholderRef && placeholderRef.current) {\r\n      observer.observe(placeholderRef.current);\r\n    }\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <div\r\n          ref={placeholderRef}\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Blurhash\r\n            hash={blurhash}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            resolutionX={32}\r\n            resolutionY={32}\r\n            punch={1}\r\n          />\r\n        </div>\r\n      )}\r\n      <img\r\n        src={`https://ecommerce-server.uk.to/uploads/${view}`}\r\n        alt=\"\"\r\n        style={{\r\n          display: isLoading ? \"none\" : \"block\",\r\n          width: \"100%\",\r\n        }}\r\n        onLoad={() => {\r\n          setIsLoading(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LazyImage;\r\n"],"names":["_id","name","image","blurHash","price","category","location","useLocation","pathname","dispatchUser","useUserContext","setNav","useProductContext","useEffect","style","position","className","top","right","fontSize","color","cursor","onClick","type","payload","id","to","window","scrollTo","src","blurhash","length","slice","GridViewList","products","loadMoreItems","totalItems","dataLength","next","hasMore","loader","Loader","endMessage","textAlign","margin","scrollThreshold","Wrapper","map","item","Product","styled","theme","colors","white","text1","media","mobile","ListView","lazy","ProductList","gridView","filterProducts","Suspense","fallback","black","useSellerContext","isLoading","dispatchSeller","setGridView","setListView","Intl","NumberFormat","currency","maximumFractionDigits","format","useState","setIsLoading","placeholderRef","useRef","view","setView","observer","IntersectionObserver","entries","isIntersecting","disconnect","rootMargin","threshold","current","observe","ref","width","height","hash","resolutionX","resolutionY","punch","alt","display","onLoad"],"sourceRoot":""}