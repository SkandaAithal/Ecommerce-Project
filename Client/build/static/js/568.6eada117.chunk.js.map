{"version":3,"file":"static/js/568.6eada117.chunk.js","mappings":"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","sources":["Components/Product.jsx","Components/GridViewList .jsx","Components/ProductList.jsx","helpers/FormatPrice.jsx","helpers/LazyImage.jsx","Components/Sort.jsx","Components/FilterSection.jsx","pages/Products.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport FormatPrice from \"../helpers/FormatPrice\";\r\nimport { useProductContext } from \"../context/productcontext\";\r\nimport LazyImage from \"../helpers/LazyImage\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useUserContext } from \"../context/userscontext\";\r\n\r\nfunction Product({ _id, name, image, blurHash, price, category }) {\r\n  let location = useLocation();\r\n  location = location.pathname;\r\n\r\n  const { dispatchUser } = useUserContext();\r\n  let { setNav } = useProductContext();\r\n\r\n  useEffect(() => {\r\n    setNav(location);\r\n  }, [location]);\r\n\r\n  const closeIconStyle = {\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    right: \"10px\",\r\n    fontSize: \"2.5rem\",\r\n    color: \"#555\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div className=\"card\">\r\n        <>\r\n          {location === \"/sellerproducts\" && (\r\n            <div className=\"close-icon\" style={closeIconStyle}>\r\n              <FaTimes\r\n                onClick={() => {\r\n                  dispatchUser({\r\n                    type: \"OPEN_CONFIRM\",\r\n                    payload: { id: _id, name: name },\r\n                  });\r\n                }}\r\n                style={{\r\n                  fontSize: \"2.75rem\",\r\n                  color: \"#555\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <Link\r\n            to={`/singleproduct/${_id}`}\r\n            onClick={() => {\r\n              window.scrollTo(0, 0);\r\n            }}\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <figure>\r\n              <LazyImage src={image} blurhash={blurHash} />\r\n              <figcaption className=\"caption\">{category}</figcaption>\r\n            </figure>\r\n            <div className=\"card-data\">\r\n              <div className=\"card-data-flex\">\r\n                <h3>{name.length > 17 ? `${name.slice(0, 17)}...` : name}</h3>\r\n                <p className=\"card-data--price\">\r\n                  <FormatPrice price={price} />\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport Product from \"./Product\";\r\nimport styled from \"styled-components\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"./Loader\";\r\n\r\nexport default function GridViewList({\r\n  products = [],\r\n  loadMoreItems,\r\n  totalItems,\r\n}) {\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={products.length}\r\n      next={loadMoreItems}\r\n      hasMore={products.length < totalItems}\r\n      loader={<Loader />}\r\n      endMessage={\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"1.5rem\",\r\n            margin: \"2rem\",\r\n            color: \"#3d3d3d\",\r\n          }}\r\n        >\r\n          <b>That's all for now! Thanks for exploring.</b>\r\n        </p>\r\n      }\r\n      scrollThreshold={0.5}\r\n    >\r\n      <Wrapper className=\"grid grid-three-column \">\r\n        {products.map((item) => {\r\n          return <Product key={item._id} {...item} />;\r\n        })}\r\n      </Wrapper>\r\n    </InfiniteScroll>\r\n  );\r\n}\r\nconst Wrapper = styled.section`\r\n  /* padding: 5rem 0; */\r\n  .item1 {\r\n    grid-column: 1 / span 3;\r\n  }\r\n\r\n  figure {\r\n    width: auto;\r\n    display: flex;\r\n    height: 18rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: all 0.5s linear;\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 0%;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      transition: all 0.2s linear;\r\n      cursor: pointer;\r\n    }\r\n    &:hover::after {\r\n      width: 100%;\r\n    }\r\n    &:hover img {\r\n      transform: scale(1.2);\r\n    }\r\n    img {\r\n      max-width: 100%;\r\n\r\n      height: 100%;\r\n      object-fit: cover;\r\n      transition: all 0.2s linear;\r\n    }\r\n\r\n    .caption {\r\n      position: absolute;\r\n      top: 15%;\r\n      right: 10%;\r\n      text-transform: uppercase;\r\n      background-color: ${({ theme }) => theme.colors.white};\r\n      color: ${({ theme }) => theme.colors.text1};\r\n      padding: 0.8rem 2rem;\r\n      font-size: 1.2rem;\r\n      border-radius: 2rem;\r\n    }\r\n  }\r\n  .close-icon {\r\n    position: absolute;\r\n    z-index: 1;\r\n  }\r\n  .card {\r\n    background-color: #ded2f37d;\r\n    border-radius: 1rem;\r\n    padding-bottom: 1rem;\r\n\r\n    .card-data {\r\n      padding: 2rem 1rem;\r\n    }\r\n\r\n    .card-data-flex {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n\r\n    h3 {\r\n      color: #2d253a;\r\n      text-transform: capitalize;\r\n    }\r\n\r\n    .card-data--price {\r\n      color: #2d253a;\r\n    }\r\n\r\n    .btn {\r\n      margin: 2rem auto;\r\n      background-color: rgb(0 0 0 / 0%);\r\n      border: 0.1rem solid rgb(98 84 243);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      &:hover {\r\n        background-color: rgb(98 84 243);\r\n      }\r\n\r\n      &:hover a {\r\n        color: #fff;\r\n      }\r\n      a {\r\n        color: rgb(98 84 243);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}) {\r\n    figure {\r\n      height: 26rem;\r\n    }\r\n  }\r\n`;\r\n","import React, { Suspense, lazy } from \"react\";\r\n\r\nimport GridViewList from \"./GridViewList \";\r\nimport Loader from \"./Loader\";\r\n\r\nconst ListView = lazy(() => import(\"./ListView\"));\r\n\r\nexport default function ProductList({\r\n  gridView,\r\n  filterProducts,\r\n  totalItems,\r\n  loadMoreItems,\r\n}) {\r\n  if (gridView === true) {\r\n    return (\r\n      <GridViewList\r\n        products={filterProducts}\r\n        loadMoreItems={loadMoreItems}\r\n        totalItems={totalItems}\r\n      />\r\n    );\r\n  }\r\n  if (gridView === false) {\r\n    return (\r\n      <Suspense fallback={<Loader />}>\r\n        <ListView\r\n          products={filterProducts}\r\n          loadMoreItems={loadMoreItems}\r\n          totalItems={totalItems}\r\n        />\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction FormatPrice({ price }) {\r\n  return (\r\n    <>\r\n      {Intl.NumberFormat(\"en-IN\", {\r\n        style: \"currency\",\r\n        currency: \"INR\",\r\n        maximumFractionDigits: 2,\r\n      }).format(price)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormatPrice;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Blurhash } from \"react-blurhash\";\r\n\r\nfunction LazyImage({ src, blurhash }) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const placeholderRef = useRef(null);\r\n  const [view, setView] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      rootMargin: \"0px 0px\",\r\n      threshold: 0,\r\n    };\r\n    const observer = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        setView(src);\r\n        observer.disconnect();\r\n      }\r\n    }, options);\r\n\r\n    if (placeholderRef && placeholderRef.current) {\r\n      observer.observe(placeholderRef.current);\r\n    }\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <div\r\n          ref={placeholderRef}\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Blurhash\r\n            hash={blurhash}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            resolutionX={32}\r\n            resolutionY={32}\r\n            punch={1}\r\n          />\r\n        </div>\r\n      )}\r\n      <img\r\n        src={`https://ecommerce-server.uk.to/uploads/${view}`}\r\n        alt=\"\"\r\n        style={{\r\n          display: isLoading ? \"none\" : \"block\",\r\n          width: \"100%\",\r\n        }}\r\n        onLoad={() => {\r\n          setIsLoading(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LazyImage;\r\n","import React from \"react\";\r\nimport { BsFillGridFill } from \"react-icons/bs\";\r\nimport { FaList } from \"react-icons/fa6\";\r\nimport styled from \"styled-components\";\r\nimport { useProductContext } from \"../context/productcontext\";\r\n\r\nexport default function Sort({\r\n  setGridView,\r\n  setListView,\r\n  gridView,\r\n  totalItems,\r\n}) {\r\n  const { updateFilterValue } = useProductContext();\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"sorting-list--grid\">\r\n        <button\r\n          className={gridView ? \"sort-btn active\" : \"sort-btn\"}\r\n          onClick={setGridView}\r\n        >\r\n          <BsFillGridFill className=\"icon\" />\r\n        </button>\r\n        <button\r\n          className={!gridView ? \"sort-btn active\" : \"sort-btn\"}\r\n          onClick={setListView}\r\n        >\r\n          <FaList className=\"icon\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"product-data\">\r\n        <p>{totalItems} total Products</p>\r\n      </div>\r\n      <div className=\"sort-selection\">\r\n        <form>\r\n          <select\r\n            name=\"sort\"\r\n            id=\"sort\"\r\n            className=\"sort-selection--style\"\r\n            onClick={updateFilterValue}\r\n          >\r\n            <option value=\"lowest\">Price (lowest)</option>\r\n\r\n            <option value=\"highest\">Price (highest)</option>\r\n\r\n            <option value=\"a-z\">Price (a-z)</option>\r\n\r\n            <option value=\"z-a\">Price (z-a)</option>\r\n          </select>\r\n        </form>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-block: 5rem;\r\n\r\n  .sorting-list--grid {\r\n    display: flex;\r\n    gap: 2rem;\r\n\r\n    .sort-btn {\r\n      padding: 0.8rem 1rem;\r\n      border: none;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .icon {\r\n      font-size: 1.6rem;\r\n    }\r\n    .active {\r\n      background-color: ${({ theme }) => theme.colors.black};\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  .sort-selection .sort-selection--style {\r\n    padding: 0.5rem;\r\n    cursor: pointer;\r\n\r\n    .sort-select--option {\r\n      padding: 0.5rem 0;\r\n      cursor: pointer;\r\n      height: 2rem;\r\n      padding: 10px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaCheck, FaAngleDown, FaAngleUp } from \"react-icons/fa\";\r\nimport FormatPrice from \"../helpers/FormatPrice\";\r\nimport { Button } from \"../styles/Button\";\r\nimport Loader from \"./Loader\";\r\nimport { useProductContext } from \"../context/productcontext\";\r\nexport default function FilterSection() {\r\n  const {\r\n    maxPrice,\r\n    minPrice,\r\n    uniqueCategories,\r\n    uniqueCompanies,\r\n    uniqueColors,\r\n    text,\r\n    category,\r\n    color,\r\n    price,\r\n    updateFilterValue,\r\n    clearFilters,\r\n  } = useProductContext();\r\n  const [showMoreCategories, setShowMoreCategories] = useState(false);\r\n  const [showMoreColors, setShowMoreColors] = useState(false);\r\n  const lessCategories = uniqueCategories.slice(0, 4);\r\n  const lessColors = uniqueColors.slice(0, 5);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"filter-search\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            value={text}\r\n            placeholder=\"Search \"\r\n            onChange={updateFilterValue}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"filter-category\">\r\n        <h3>Category</h3>\r\n\r\n        {uniqueCategories.length ? (\r\n          <div>\r\n            {showMoreCategories\r\n              ? [\"all\", ...uniqueCategories].map((curElem, index) => {\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      name=\"category\"\r\n                      value={curElem}\r\n                      className={curElem === category ? \"active\" : \"\"}\r\n                      onClick={updateFilterValue}\r\n                    >\r\n                      {curElem}\r\n                    </button>\r\n                  );\r\n                })\r\n              : [\"all\", ...lessCategories].map((curElem, index) => {\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      name=\"category\"\r\n                      value={curElem}\r\n                      className={curElem === category ? \"active\" : \"\"}\r\n                      onClick={updateFilterValue}\r\n                    >\r\n                      {curElem}\r\n                    </button>\r\n                  );\r\n                })}\r\n\r\n            {showMoreCategories ? (\r\n              <FaAngleUp\r\n                className=\"arrow-icon\"\r\n                onClick={() => {\r\n                  setShowMoreCategories(false);\r\n                }}\r\n              />\r\n            ) : (\r\n              <FaAngleDown\r\n                className=\"arrow-icon\"\r\n                onClick={() => {\r\n                  setShowMoreCategories(true);\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"filter-company\">\r\n        <h3>Company</h3>\r\n        {uniqueCompanies.length ? (\r\n          <form>\r\n            <select\r\n              name=\"company\"\r\n              className=\"filter-company--select\"\r\n              onClick={updateFilterValue}\r\n            >\r\n              {[\"all\", ...uniqueCompanies].map((curElem, index) => {\r\n                return (\r\n                  <option key={index} value={curElem}>\r\n                    {curElem}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </form>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\".filter-color-style \">\r\n        <h3>Colors</h3>\r\n        {uniqueColors.length ? (\r\n          <div className=\"filter-color-style\">\r\n            <button\r\n              className=\"color-all--style \"\r\n              name=\"color\"\r\n              value=\"all\"\r\n              onClick={updateFilterValue}\r\n            >\r\n              all\r\n            </button>\r\n\r\n            {showMoreColors\r\n              ? uniqueColors.map((curColor, index) => {\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      name=\"color\"\r\n                      value={curColor}\r\n                      style={{ backgroundColor: curColor }}\r\n                      className={\r\n                        curColor === color ? \"active btnStyle\" : \"btnStyle\"\r\n                      }\r\n                      onClick={updateFilterValue}\r\n                    >\r\n                      {curColor === color ? (\r\n                        <FaCheck className=\"checkStyle\" />\r\n                      ) : null}\r\n                    </button>\r\n                  );\r\n                })\r\n              : lessColors.map((curColor, index) => {\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      name=\"color\"\r\n                      value={curColor}\r\n                      style={{ backgroundColor: curColor }}\r\n                      className={\r\n                        curColor === color ? \"active btnStyle\" : \"btnStyle\"\r\n                      }\r\n                      onClick={updateFilterValue}\r\n                    >\r\n                      {curColor === color ? (\r\n                        <FaCheck className=\"checkStyle\" />\r\n                      ) : null}\r\n                    </button>\r\n                  );\r\n                })}\r\n\r\n            {showMoreColors ? (\r\n              <FaAngleUp\r\n                className=\"arrow-icon\"\r\n                onClick={() => {\r\n                  setShowMoreColors(false);\r\n                }}\r\n              />\r\n            ) : (\r\n              <FaAngleDown\r\n                className=\"arrow-icon\"\r\n                onClick={() => {\r\n                  setShowMoreColors(true);\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"filter_price\">\r\n        <h3>Price</h3>\r\n        {price && (\r\n          <p>\r\n            <FormatPrice price={price} number={100} />\r\n          </p>\r\n        )}\r\n        <input\r\n          type=\"range\"\r\n          name=\"price\"\r\n          id=\"price\"\r\n          min={minPrice}\r\n          step={1}\r\n          max={maxPrice}\r\n          value={price}\r\n          onChange={updateFilterValue}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"filter-clear\">\r\n        <Button className=\"btn\" onClick={clearFilters}>\r\n          Clear Filter\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 5rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3rem;\r\n\r\n  .arrow-icon {\r\n    font-size: 2rem;\r\n    color: red;\r\n    cursor: pointer;\r\n    transition: transform 0.3s ease-in-out;\r\n\r\n    &:hover {\r\n      transform: scale(1.15);\r\n    }\r\n  }\r\n  h3 {\r\n    padding: 2rem 0;\r\n    font-size: bold;\r\n  }\r\n\r\n  .filter-search {\r\n    input {\r\n      padding: 0.6rem 1rem;\r\n      /* width: 80%; */\r\n    }\r\n  }\r\n\r\n  .filter-category {\r\n    div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n      gap: 1.4rem;\r\n\r\n      button {\r\n        border: none;\r\n        color: ${({ theme }) => theme.colors.black};\r\n        background-color: ${({ theme }) => theme.colors.white};\r\n        text-transform: capitalize;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n          color: ${({ theme }) => theme.colors.btn};\r\n        }\r\n      }\r\n\r\n      .active {\r\n        border-bottom: 1px solid #000;\r\n        color: ${({ theme }) => theme.colors.btn};\r\n      }\r\n    }\r\n  }\r\n\r\n  .filter-company--select {\r\n    padding: 0.3rem 1.2rem;\r\n    font-size: 1.6rem;\r\n    color: ${({ theme }) => theme.colors.black};\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  .filter-color-style {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 0.75rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .color-all--style {\r\n    background-color: transparent;\r\n    text-transform: capitalize;\r\n    border: none;\r\n    color: black;\r\n    cursor: pointer;\r\n  }\r\n  .btnStyle {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    box-shadow: 0px 0px 5px 2px #dad9db;\r\n    border-radius: 50%;\r\n\r\n    border: none;\r\n    outline: none;\r\n    opacity: 0.5;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .active {\r\n    opacity: 1;\r\n  }\r\n\r\n  .checkStyle {\r\n    font-size: 1rem;\r\n    color: #fff;\r\n  }\r\n\r\n  .filter_price {\r\n    input {\r\n      margin: 0.5rem 0 1rem 0;\r\n      padding: 0;\r\n      box-shadow: none;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .filter-shipping {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n\r\n  .filter-clear .btn {\r\n    background-color: #f05b4a;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ProductList from \"../Components/ProductList\";\r\nimport Sort from \"../Components/Sort\";\r\nimport FilterSection from \"../Components/FilterSection\";\r\n\r\nimport { useProductContext } from \"../context/productcontext\";\r\nimport Loader from \"../Components/Loader\";\r\n\r\nconst Products = () => {\r\n  const {\r\n    products,\r\n    isLoading,\r\n    totalItems,\r\n    loadMoreProducts,\r\n    setGridView,\r\n    setListView,\r\n    gridView,\r\n  } = useProductContext();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"container grid grid-filter-column\">\r\n        <div>\r\n          <FilterSection />\r\n        </div>\r\n        <section className=\"product-view--sort\">\r\n          <div className=\"sort-filter\">\r\n            <Sort\r\n              setGridView={setGridView}\r\n              setListView={setListView}\r\n              gridView={gridView}\r\n              totalItems={totalItems}\r\n              filterProducts={products}\r\n            />\r\n          </div>\r\n          <div>\r\n            {isLoading ? (\r\n              <Loader />\r\n            ) : (\r\n              <ProductList\r\n                gridView={gridView}\r\n                filterProducts={products}\r\n                totalItems={totalItems}\r\n                loadMoreItems={loadMoreProducts}\r\n              />\r\n            )}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  padding-inline: 2rem;\r\n  .grid-filter-column {\r\n    grid-template-columns: 0.2fr 1fr;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}) {\r\n    .grid-filter-column {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Products;\r\n"],"names":["_id","name","image","blurHash","price","category","location","useLocation","pathname","dispatchUser","useUserContext","setNav","useProductContext","useEffect","style","position","className","top","right","fontSize","color","cursor","onClick","type","payload","id","to","window","scrollTo","src","blurhash","length","slice","GridViewList","products","loadMoreItems","totalItems","dataLength","next","hasMore","loader","Loader","endMessage","textAlign","margin","scrollThreshold","Wrapper","map","item","Product","styled","theme","colors","white","text1","media","mobile","ListView","lazy","ProductList","gridView","filterProducts","Suspense","fallback","Intl","NumberFormat","currency","maximumFractionDigits","format","useState","isLoading","setIsLoading","placeholderRef","useRef","view","setView","observer","IntersectionObserver","entries","isIntersecting","disconnect","rootMargin","threshold","current","observe","ref","width","height","hash","resolutionX","resolutionY","punch","alt","display","onLoad","Sort","setGridView","setListView","updateFilterValue","value","black","FilterSection","maxPrice","minPrice","uniqueCategories","uniqueCompanies","uniqueColors","text","clearFilters","showMoreCategories","setShowMoreCategories","showMoreColors","setShowMoreColors","lessCategories","lessColors","onSubmit","e","preventDefault","placeholder","onChange","curElem","index","curColor","backgroundColor","FormatPrice","number","min","step","max","Button","btn","loadMoreProducts"],"sourceRoot":""}